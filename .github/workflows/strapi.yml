name: strapi
on:
  push:
    branches:
      - main
    paths:
      - "packages/strapi/**"
      - ".github/workflows/strapi.yml"
      - "Dockerfile"
      - "package.json"
      - ".dockerignore"
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: "access_token"

      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            europe-west3-docker.pkg.dev/treten-reisen/treten-reisen-docker-registry/strapi:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: "access_token"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v1

      - name: deploy
        env:
          HOST: "0.0.0.0"
          DATABASE_NAME: "strapi"
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          APP_KEYS: ${{ secrets.STRAPI_APP_KEYS }}
          API_TOKEN_SALT: ${{ secrets.STRAPI_API_TOKEN_SALT }}
          ADMIN_JWT_SECRET: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
          JWT_SECRET: ${{ secrets.STRAPI_JWT_SECRET }}
          STRAPI_URL: ${{ secrets.STRAPI_URL }}
          ASSET_BUCKET_NAME: ${{ secrets.GCP_BUCKET_ASSETS }}
          INSTANCE_CONNECTION_NAME: ${{ secrets.DATABASE_GCP_CONNECTION_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
        run: |
          gcloud config set run/region europe-west1
          echo -n $DATABASE_PASSWORD | gcloud secrets versions add DATABASE_PASSWORD --data-file=-
          echo -n $APP_KEYS | gcloud secrets versions add APP_KEYS --data-file=-
          echo -n $API_TOKEN_SALT | gcloud secrets versions add API_TOKEN_SALT --data-file=-
          echo -n $ADMIN_JWT_SECRET | gcloud secrets versions add ADMIN_JWT_SECRET --data-file=-
          echo -n $JWT_SECRET | gcloud secrets versions add JWT_SECRET --data-file=-
          gcloud run services update strapi \
            --image europe-west3-docker.pkg.dev/treten-reisen/treten-reisen-docker-registry/strapi:latest \
            --update-env-vars STRAPI_URL=$STRAPI_URL,ASSET_BUCKET_NAME=$ASSET_BUCKET_NAME,INSTANCE_CONNECTION_NAME=$INSTANCE_CONNECTION_NAME,DATABASE_USER=$DATABASE_USER,HOST=$HOST,DATABASE_NAME=$DATABASE_NAME \
            --update-secrets=DATABASE_PASSWORD=DATABASE_PASSWORD:latest,APP_KEYS=APP_KEYS:latest,API_TOKEN_SALT=API_TOKEN_SALT:latest,ADMIN_JWT_SECRET=ADMIN_JWT_SECRET:latest,JWT_SECRET=JWT_SECRET:latest \
            --add-cloudsql-instances=$INSTANCE_CONNECTION_NAME
