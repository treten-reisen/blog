---
import * as dateFns from "date-fns"

import type { StrapiArticleListItem } from "../../data/get-article-list"
import { dateFnsLocale } from "../../date-format"
import { encodeImageToBlurhashURL } from "../../helpers/blurhash"
import LazyImage from "../lazy-image"

export type Props = { article: StrapiArticleListItem }

const { article } = Astro.props as Props
const blurhash = await encodeImageToBlurhashURL(article.attributes.image.lg)
---

<a
  href={`/articles/${article.attributes.slug}`}
  class="flex flex-col overflow-hidden rounded-xl bg-gray-50 shadow-xl @container/article-card"
>
  <header class="relative flex flex-col">
    <div class="h-52 @lg/article-card:h-64">
      <LazyImage
        blurhashConfig={blurhash}
        src={article.attributes.image.lg.htmlImage.src || undefined}
        alt={article.attributes.image.lg.htmlImage.alt || undefined}
        loading="lazy"
        client:load
      />
    </div>
    <div class="absolute bottom-0 h-full w-full bg-gradient-to-t from-gray-900 @md/article-card:to-60%"></div>
    <div class="absolute bottom-0 p-4 @sm/article-card:p-cq-responsive-1/2">
      <h3 class="font-sans text-lg font-bold tracking-tight text-gray-100">
        {article.attributes.title}
      </h3>
      {
        article.attributes.publishedAt && (
          <time
            class="font-sans text-sm text-gray-100"
            datetime={dateFns.format(article.attributes.publishedAt, "yyyy-MM-dd")}
          >
            {dateFns.formatRelative(article.attributes.publishedAt, new Date(), { locale: dateFnsLocale })}
          </time>
        )
      }
    </div>
  </header>
  <div class="p-4 font-sans tracking-tight @sm/article-card:p-cq-responsive-1/2">
    {article.attributes.summary}
  </div>
</a>
